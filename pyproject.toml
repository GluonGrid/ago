[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ago"
version = "1.3.0"
description = "Docker-like orchestration for AI agents with memory and knowledge"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [{ name = "Ago Team", email = "team@ago.com" }]
keywords = ["ai", "agents", "llm", "orchestration", "docker", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "typer",
    "rich",
    "pyyaml",
    "pocketflow",
    "aiohttp",
    "python-dotenv",
    "fastmcp",
    "requests",
    "brotli",
    "msgpack",
]

[project.urls]
Homepage = "https://github.com/gluongrid/ago"
Documentation = "https://docs.ago.dev"
Repository = "https://github.com/gluongrid/ago"
"Bug Reports" = "https://github.com/gluongrid/ago/issues"

[project.scripts]
ago = "ago.cli.main:app"

[project.optional-dependencies]
dev = ["pytest", "pytest-asyncio", "black", "ruff", "mypy"]

cloud = ["pinecone-client", "chromadb", "openai", "anthropic"]

[tool.hatch.build.targets.wheel]
packages = ["ago"]

[tool.hatch.build.targets.wheel.shared-data]
"ago/templates" = "share/ago/templates"
"ago/cookbook" = "share/ago/cookbook"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.ruff]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]                  # line too long
line-length = 88
target-version = "py312"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
